# This file defines and orchestrates all services for the local demo environment.

services:
  # Vault Server: The in-theater security control plane.
  vault-server:
    image: "hashicorp/vault:1.20"
    container_name: "vault-server-demo"
    ports:
      - "8200:8200"
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: "root"
      VAULT_ADDR: "http://0.0.0.0:8200"
    cap_add:
      - IPC_LOCK
    # The healthcheck ensures that other services don't start until Vault is unsealed and ready.
    healthcheck:
      test: ["CMD", "vault", "status", "-address=http://127.0.0.1:8200"]
      interval: 5s
      timeout: 3s
      retries: 5

  # Demo Controller: The Node.js API and Web GUI server.
  demo-controller:
    build:
      context: ./demo-controller
    ports:
      - "8080:8080"
    # SECURITY NOTE: Mounting the Docker socket is a security risk and is done here
    # only to allow the demo controller to trigger administrative actions on the
    # Vault container for the interactive scenarios.
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      vault-server:
        condition: service_healthy

  # Stryker Agent: A placeholder representing a vehicle agent.
  stryker-agent-1:
    image: "alpine:latest"
    command: tail -f /dev/null

  # This service runs once to configure Vault and then exits.
  vault-configurator:
    build:
      context: ./vault-configurator
    depends_on:
      vault-server:
        condition: service_healthy
    # This service communicates with vault-server over the internal Docker network
    # and does not need to expose any ports.
